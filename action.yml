name: Install
description: Installs Meteor and npm dependencies
inputs:
  executable_version:
    description: 'Meteor version for the `meteor` executable. If set to `local` or not explicitly set, the `meteor` executable will have the version specified in .meteor/release (this may not work with alpha and beta builds). You can use `latest` as an alias for the latest Meteor release.'
    required: true
    default: 'local'
  decrypt_key:
    description: 'Key to decrypt repository files with transcrypt'
    required: false
  cache-dependency-path:
    description: 'Files to use as a cache key for global ~~/.npm dependencies'
    required: true
    default: './package-lock.json'
runs:
  using: composite
  steps:
    - name: Set $PATH
      run: echo "$HOME/.meteor" >> $GITHUB_PATH
      shell: bash

    - name: Set env.METEOR_LOCAL_RELEASE 
      run: echo "METEOR_LOCAL_RELEASE=$(cat .meteor/release | cut -d@ -f2)" >> $GITHUB_ENV
      shell: bash

    - name: Set env.METEOR_EXECUTABLE_VERSION 
      run: |
        if [ ${{ inputs.executable_version }} = 'local' ]; then
          echo "METEOR_EXECUTABLE_VERSION=${{ env.METEOR_LOCAL_RELEASE }}" >> $GITHUB_ENV
        elif [ ${{ inputs.executable_version }} = 'latest' ]; then
          echo "METEOR_EXECUTABLE_VERSION=$(curl -s https://install.meteor.com | sed -n 's/^RELEASE="\(.*\)"$/\1/p')" >> $GITHUB_ENV
        else
          echo "METEOR_EXECUTABLE_VERSION=${{ inputs.executable_version }}" >> $GITHUB_ENV
        fi
      shell: bash

    - name: Cache ~/.meteor (Meteor ${{ env.METEOR_EXECUTABLE_VERSION }} (.meteor/release is ${{ env.METEOR_LOCAL_RELEASE }})) 
      uses: actions/cache@v3
      id: cache-meteor
      env:
        cache-name: cache-meteor
      with:
        path: ~/.meteor
        key: ${{ runner.os }}-${{ env.cache-name }}-${{ env.METEOR_EXECUTABLE_VERSION }}-${{ hashFiles('.meteor/release') }}-${{ hashFiles('.meteor/versions') }}
        restore-keys: |
          ${{ runner.os }}-${{ env.cache-name }}-${{ env.METEOR_EXECUTABLE_VERSION }}-${{ hashFiles('.meteor/release') }}-
          ${{ runner.os }}-${{ env.cache-name }}-${{ env.METEOR_EXECUTABLE_VERSION }}-

    - name: Install Meteor ${{ env.METEOR_EXECUTABLE_VERSION }}
      if: steps.cache-meteor.outputs.cache-hit != 'true'
      run: curl https://install.meteor.com?release=${{ env.METEOR_EXECUTABLE_VERSION }} | sh
      shell: bash
    
    - name: Cache ~/.transcryptbin for v2.3.0-pre
      if: inputs.decrypt_key != null
      uses: actions/cache@v3
      id: cache-transcrypt
      env:
        cache-name: cache-transcrypt
      with:
        path: ~/.transcryptbin
        key: ${{ runner.os }}-${{ env.cache-transcrypt }}-v2.3.0-pre

    - name: Install Transcrypt
      if: inputs.decrypt_key != null && steps.cache-transcrypt.outputs.cache-hit != 'true'
      run: |
        mkdir ~/.transcryptbin
        curl -o  ~/.transcryptbin/transcrypt https://raw.githubusercontent.com/elasticdog/transcrypt/master/transcrypt
        chmod +x ~/.transcryptbin/transcrypt
      shell: bash

    - name: Decrypt Repo (previously checked out)
      if: inputs.decrypt_key != null
      run: ~/.transcryptbin/transcrypt -c aes-256-cbc -y -p ${{ inputs.decrypt_key }}
      shell: bash

    - name: Get meteor node version
      run: echo "NODE_VERSION=$(meteor node -v)" >> $GITHUB_ENV
      shell: bash

    - name: Install node
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: ${{ inputs.cache-dependency-path}}