name: Install
description: Installs Meteor and Node With Cache enabled
inputs:
  executable-version:
    description: 'Meteor version for the `meteor` executable. If set to `local` or not explicitly set, the `meteor` executable will have the version specified in .meteor/release (this may not work with alpha and beta builds). You can use `latest` as an alias for the latest Meteor release.'
    required: true
    default: 'local'
  working-directory:
    required: true
    default: '.'
  cache-dependency-path:
    description: 'Files to use as a cache key for global ~~/.npm dependencies'
    required: true
    default: './package-lock.json'
  local-cache-key:
    description: "Name assigned to the cache for meteor local when used with multiple settings"
    required: true
    default: ${{ github.job }}
runs:
  using: composite
  steps:
    - name: Set $PATH
      shell: bash
      run: echo "$HOME/.meteor" >> $GITHUB_PATH
    
    - name: Set env.METEOR_RELEASE_PATH 🥾
      shell: bash
      run: echo "METEOR_RELEASE_PATH=${{ inputs.working-directory }}/.meteor/release" >> $GITHUB_ENV
    
    - name: Set env.METEOR_LOCAL_PATH 
      shell: bash
      run: echo "METEOR_LOCAL_PATH=${{ inputs.working-directory }}/.meteor/local" >> $GITHUB_ENV

    - name: Set env.METEOR_LOCAL_RELEASE 📻
      run: echo "METEOR_LOCAL_RELEASE=$(cat ${{ env.METEOR_RELEASE_PATH }} | cut -d@ -f2)" >> $GITHUB_ENV
      shell: bash

    - name: Set env.METEOR_EXECUTABLE_VERSION 📺
      shell: bash
      run: |
        if [ ${{ inputs.executable-version }} = 'local' ]; then
          echo "METEOR_EXECUTABLE_VERSION=${{ env.METEOR_LOCAL_RELEASE }}" >> $GITHUB_ENV
        elif [ ${{ inputs.executable-version }} = 'latest' ]; then
          echo "METEOR_EXECUTABLE_VERSION=$(curl -s https://install.meteor.com | sed -n 's/^RELEASE="\(.*\)"$/\1/p')" >> $GITHUB_ENV
        else
          echo "METEOR_EXECUTABLE_VERSION=${{ inputs.executable-version }}" >> $GITHUB_ENV
        fi
      

    - name: Cache ~/.meteor (Meteor ${{ env.METEOR_EXECUTABLE_VERSION }} (${{ env.METEOR_RELEASE_PATH }} is ${{ env.METEOR_LOCAL_RELEASE }})) 💿
      uses: actions/cache@v4
      id: cache-meteor
      env:
        cache-name: cache-meteor
      with:
        path: ~/.meteor
        key: ${{ runner.os }}-${{ env.cache-name }}-${{ env.METEOR_EXECUTABLE_VERSION }}-${{ hashFiles(env.METEOR_RELEASE_PATH) }}-${{ hashFiles('.meteor/versions') }}
        restore-keys: |
          ${{ runner.os }}-${{ env.cache-name }}-${{ env.METEOR_EXECUTABLE_VERSION }}-${{ hashFiles(env.METEOR_RELEASE_PATH) }}-
          ${{ runner.os }}-${{ env.cache-name }}-${{ env.METEOR_EXECUTABLE_VERSION }}-

    - name: Install Meteor ${{ env.METEOR_EXECUTABLE_VERSION }} ☄️
      if: steps.cache-meteor.outputs.cache-hit != 'true'
      shell: bash
      run: |
        curl https://install.meteor.com?release=${{ env.METEOR_EXECUTABLE_VERSION }} | sh

    - name: Cache ${{ env.METEOR_LOCAL_PATH }}
      uses: actions/cache@v4
      env:
        cache-name: cache-meteor-local
      with:
        path: |
          ${{ env.METEOR_LOCAL_PATH }}/resolver-result-cache.json
          ${{ env.METEOR_LOCAL_PATH }}/plugin-cache
          ${{ env.METEOR_LOCAL_PATH }}/isopacks
          ${{ env.METEOR_LOCAL_PATH }}/bundler-cache/scanner
        key: ${{ runner.os }}-${{ env.cache-name }}-${{ inputs.local-cache-key }}-${{ env.METEOR_EXECUTABLE_VERSION }}-${{ hashFiles(env.METEOR_RELEASE_PATH) }}-${{ hashFiles('.meteor/versions') }}-${{ github.ref }}-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-${{ env.cache-name }}-${{ inputs.local-cache-key }}-${{ env.METEOR_EXECUTABLE_VERSION }}-${{ hashFiles(env.METEOR_RELEASE_PATH) }}-${{ hashFiles('.meteor/versions') }}-${{ github.ref }}-
          ${{ runner.os }}-${{ env.cache-name }}-${{ inputs.local-cache-key }}-${{ env.METEOR_EXECUTABLE_VERSION }}-${{ hashFiles(env.METEOR_RELEASE_PATH) }}-${{ hashFiles('.meteor/versions') }}-
          ${{ runner.os }}-${{ env.cache-name }}-${{ inputs.local-cache-key }}-${{ env.METEOR_EXECUTABLE_VERSION }}-${{ hashFiles(env.METEOR_RELEASE_PATH) }}-
          ${{ runner.os }}-${{ env.cache-name }}-${{ inputs.local-cache-key }}-${{ env.METEOR_EXECUTABLE_VERSION }}-

    - name: Get meteor node version
      run: echo "NODE_VERSION=$(meteor node -v)" >> $GITHUB_ENV
      shell: bash

    - name: Install Node
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: ${{ inputs.cache-dependency-path}}

