name: Install
description: Installs Meteor and npm dependencies
inputs:
  executable_version:
    description: 'Meteor version for the `meteor` executable. If set to `local` or not explicitly set, the `meteor` executable will have the version specified in .meteor/release (this may not work with alpha and beta builds). You can use `latest` as an alias for the latest Meteor release.'
    required: true
    default: 'local'
outputs:
  ran-npm-install-hooks:
    description: "Whether npm install hooks were run."
    value: ${{ steps.cache-node-modules.outputs.cache-hit != 'true' }}
runs:
  using: composite
  steps:
    - name: Set $PATH ü™ú
      run: echo "$HOME/.meteor" >> $GITHUB_PATH
      shell: bash

    - name: Set env.METEOR_LOCAL_RELEASE üìª
      run: echo "METEOR_LOCAL_RELEASE=$(sed -n 's/^METEOR@\([0-9][0-9]*.*\)$/\1/p' .meteor/release)" >> $GITHUB_ENV
      shell: bash

    - name: Set env.METEOR_EXECUTABLE_VERSION üì∫
      run: |
        if [ ${{ inputs.executable_version }} = 'local' ]; then
          echo "METEOR_EXECUTABLE_VERSION=${{ env.METEOR_LOCAL_RELEASE }}" >> $GITHUB_ENV
        elif [ ${{ inputs.executable_version }} = 'latest' ]; then
          echo "METEOR_EXECUTABLE_VERSION=$(curl -s https://install.meteor.com | sed -n 's/^RELEASE="\(.*\)"$/\1/p')" >> $GITHUB_ENV
        else
          echo "METEOR_EXECUTABLE_VERSION=${{ inputs.executable_version }}" >> $GITHUB_ENV
        fi
      shell: bash

    - name: Cache ~/.meteor (Meteor ${{ env.METEOR_EXECUTABLE_VERSION }} (.meteor/release is ${{ env.METEOR_LOCAL_RELEASE }})) üíø
      uses: actions/cache@v4
      id: cache-meteor
      env:
        cache-name: cache-meteor
      with:
        path: ~/.meteor
        key: ${{ runner.os }}-${{ env.cache-name }}-${{ env.METEOR_EXECUTABLE_VERSION }}-${{ hashFiles('.meteor/release') }}-${{ hashFiles('.meteor/versions') }}
        restore-keys: |
          ${{ runner.os }}-${{ env.cache-name }}-${{ env.METEOR_EXECUTABLE_VERSION }}-${{ hashFiles('.meteor/release') }}-
          ${{ runner.os }}-${{ env.cache-name }}-${{ env.METEOR_EXECUTABLE_VERSION }}-

    - name: Install Meteor ${{ env.METEOR_EXECUTABLE_VERSION }} ‚òÑÔ∏è
      if: steps.cache-meteor.outputs.cache-hit != 'true'
      run: curl https://install.meteor.com?release=${{ env.METEOR_EXECUTABLE_VERSION }} | sh
      shell: bash

    - name: Cache ~/.npm üìÄ
      uses: actions/cache@v4
      env:
        cache-name: cache-npm
      with:
        path: ~/.npm
        key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-${{ env.cache-name }}-
          ${{ runner.os }}-

    - name: Cache ./node_modules üíΩ
      uses: actions/cache@v4
      id: cache-node-modules
      env:
        cache-name: cache-node-modules
      with:
        path: ./node_modules
        key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

    - name: Install dependencies üì¶
      if: steps.cache-node-modules.outputs.cache-hit != 'true'
      run: meteor npm clean-install
      shell: bash
